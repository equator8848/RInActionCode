)
))
scatter_plot <- xyplot(wage ~ educ, data = CPS85,
main = "Wage vs Education",
xlab = "Education Years",
ylab = "Wage",
pch = 16,
col = "blue")
# 显示散点图
print(scatter_plot)
# 2. 拟合线性回归模型
model <- lm(wage ~ educ, data = CPS85)
# 3. 在散点图上添加拟合直线
# 定义一个函数来添加拟合直线
add_regression_line <- function(x, y) {
abline(model, col = "red", lwd = 2)
}
# 将添加直线的函数应用到散点图上
scatter_plot_with_line <- update(scatter_plot, panel = function(...) {
panel.xyplot(...)
add_regression_line(...)
})
# 显示带有拟合直线的散点图
print(scatter_plot_with_line)
# Base R
plot(mtcars$wt, mtcars$mpg,
main = "Base Graphics",
xlab = "Weight",
ylab = "Miles per Gallon",
pch = 19, col = "blue")
xyplot(mpg ~ wt, data = mtcars,
main = "Lattice",
xlab = "Weight", ylab = "Miles per Gallon",
pch = 19, col = "blue")
grid.newpage()
pushViewport(plotViewport(margins = c(5, 4, 4, 2)))
pushViewport(dataViewport(mtcars$wt, mtcars$mpg))
grid.xaxis()
grid.yaxis()
grid.rect()
grid.points(mtcars$wt, mtcars$mpg, pch = 19, gp = gpar(col = "blue"))
grid.text("Weight", y = unit(-3, "lines"))
grid.text("Miles per Gallon", x = unit(-3, "lines"), rot = 90)
grid.text("Grid Graphics", y = unit(1, "npc") - unit(1, "lines"))
ggplot(mtcars, aes(x = wt, y = mpg)) +
geom_point(color = "blue") +
labs(title = "ggplot2",
x = "Weight", y = "Miles per Gallon")
# Base R
plot(mtcars$wt, mtcars$mpg,
main = "Base Graphics",
xlab = "Weight",
ylab = "Miles per Gallon",
pch = 19, col = "skyblue")
# Base R
plot(mtcars$wt, mtcars$mpg,
main = "Base Graphics",
xlab = "Weight",
ylab = "Miles per Gallon",
pch = 19, col = "skyblue")
library(lattice)
xyplot(mpg ~ wt, data = mtcars,
main = "Lattice",
xlab = "Weight", ylab = "Miles per Gallon",
pch = 19, col = "skyblue")
library(grid)
grid.newpage()
pushViewport(plotViewport(margins = c(5, 4, 4, 2)))
pushViewport(dataViewport(mtcars$wt, mtcars$mpg))
grid.xaxis()
grid.yaxis()
grid.rect()
grid.points(mtcars$wt, mtcars$mpg, pch = 19, gp = gpar(col = "skyblue"))
grid.text("Weight", y = unit(-3, "lines"))
grid.text("Miles per Gallon", x = unit(-3, "lines"), rot = 90)
grid.text("Grid Graphics", y = unit(1, "npc") - unit(1, "lines"))
library(ggplot2)
ggplot(mtcars, aes(x = wt, y = mpg)) +
geom_point(color = "skyblue") +
labs(title = "ggplot2",
x = "Weight", y = "Miles per Gallon")
sessionInfo()
sessionInfo()
dataset <- mosaicData::CPS85
# "wage"、"educ"、"race"、"sex"、"hispanic"、"south"、"married"、"exper"、"union"、"age"、"sector"
# 小时工资、受教育年限、种族、性别、西班牙裔、是否居住在美国南部、
# 婚姻状况、工作经验年限、是否属于工会、年龄、行业
names(dataset)
# ggplot需要输入一个数据框和一组映射，映射是数据框变量到图形的可视属性的映射
# geom_函数在图形上放置几何对象
ggplot(data = dataset, mapping = aes(x = exper, y = wage))
library(ggplot2)
# ggplot需要输入一个数据框和一组映射，映射是数据框变量到图形的可视属性的映射
# geom_函数在图形上放置几何对象
ggplot(data = dataset, mapping = aes(x = exper, y = wage))
View(dataset)
# geom_函数在图形上放置几何对象
ggplot(data = dataset, mapping = aes(x = exper, y = wage)) +
geom_point()
dataset <- dataset[dataset$wage < 40, ]
ggplot(data = dataset, mapping = aes(x = exper, y = wage)) +
geom_point(color = "cornflowerblue", alpha = 0.7, size = 1.5) +
geom_smooth(method = "lm") +
theme_bw()
ggplot(data = dataset, mapping = aes(x = exper, y = wage)) +
geom_point(color = "cornflowerblue", alpha = 0.7, size = 1.5) +
theme_bw()
ggplot(data = dataset, mapping = aes(x = exper, y = wage)) +
geom_point(color = "cornflowerblue", alpha = 0.7, size = 1.5) +
theme_bw()
# ggplot需要输入一个数据框和一组映射，映射是数据框变量到图形的可视属性的映射
ggplot(data = dataset, mapping = aes(x = exper, y = wage))
# geom_xxx函数在图形上放置几何对象，geom_xxx函数家族非常丰富
ggplot(data = dataset, mapping = aes(x = exper, y = wage)) +
geom_point()
dataset <- mosaicData::CPS85
# ggplot需要输入一个数据框和一组映射，映射是数据框变量到图形的可视属性的映射
ggplot(data = dataset, mapping = aes(x = exper, y = wage))
# geom_xxx函数在图形上放置几何对象，geom_xxx函数家族非常丰富
ggplot(data = dataset, mapping = aes(x = exper, y = wage)) +
geom_point()
# 去除异常点并添加颜色
dataset <- dataset[dataset$wage < 40, ]
ggplot(data = dataset, mapping = aes(x = exper, y = wage)) +
geom_point(color = "cornflowerblue", alpha = 0.7, size = 1.5) +
theme_bw()
# geom_smooth函数在图形上添加平滑曲线，以此来展示数据的趋势
ggplot(data = dataset, mapping = aes(x = exper, y = wage)) +
geom_point(color = "cornflowerblue", alpha = 0.7, size = 1.5) +
geom_smooth(method = "lm") +
theme_bw()
styler:::style_active_file()
styler:::style_active_file()
styler:::style_active_file()
styler:::style_active_file()
styler:::style_active_file()
# 将变量映射到点的颜色、形状和线的颜色，注意这时geom_point就不要设置color参数了
ggplot(
data = dataset,
mapping = aes(
x = exper, y = wage, color = sex, shape = sex, linetype = sex)) +
geom_point(alpha = 0.7, size = 1.5) +
geom_smooth(method = "lm", se = FALSE) +
theme_bw()
# 将变量映射到点的颜色、形状和线的颜色，注意这时geom_point就不要设置color参数了
ggplot(
data = dataset,
mapping = aes(
x = exper, y = wage, color = sex, shape = sex, linetype = sex)) +
geom_point(alpha = 0.7, size = 1.5) +
geom_smooth(method = "lm", se = FALSE, size = 1.5) +
theme_bw()
# 修改标尺设置
ggplot(
data = dataset,
mapping = aes(x = exper, y = wage, color = sex, shape = sex, linetype = sex)
) +
geom_point(alpha = 0.7, size = 1.5) +
geom_smooth(method = "lm", se = FALSE) +
scale_x_continuous(breaks = seq(0, 60, 10)) +
scale_y_continuous(breaks = seq(0, 30, 5)) +
scale_color_manual(values = c("indianred3", "cornflowerblue")) +
theme_bw()
# 修改标尺设置
ggplot(
data = dataset,
mapping = aes(x = exper, y = wage, color = sex, shape = sex, linetype = sex)
) +
geom_point(alpha = 0.7, size = 1.5) +
geom_smooth(method = "lm", se = FALSE) +
scale_x_continuous(breaks = seq(0, 60, 10)) +
scale_y_continuous(breaks = seq(0, 30, 5)) +
scale_color_manual(values = c("indianred3", "cornflowerblue")) +
theme_bw()
ggplot(
data = dataset,
mapping = aes(x = exper, y = wage, color = sex, shape = sex, linetype = sex)
) +
geom_point(alpha = 0.7, size = 1.5) +
geom_smooth(method = "lm", se = FALSE, size = 1.5) +
scale_x_continuous(breaks = seq(0, 60, 10)) +
scale_y_continuous(breaks = seq(0, 30, 5)) +
scale_color_manual(values = c("indianred3", "cornflowerblue")) +
theme_bw()
install.packages(c("scales"))
# 设置标签
ggplot(
data = dataset,
mapping = aes(x = exper, y = wage, color = sex, shape = sex, linetype = sex)
) +
geom_point(alpha = 0.7, size = 1.5) +
geom_smooth(method = "lm", se = FALSE, size = 1.5) +
scale_x_continuous(breaks = seq(0, 60, 10)) +
scale_y_continuous(breaks = seq(0, 30, 5), labels= scales::dollar) +
scale_color_manual(values = c("indianred3", "cornflowerblue")) +
theme_bw()
library(ggplot2)
# 设置标签
ggplot(
data = dataset,
mapping = aes(x = exper, y = wage, color = sex, shape = sex, linetype = sex)
) +
geom_point(alpha = 0.7, size = 1.5) +
geom_smooth(method = "lm", se = FALSE) +
scale_x_continuous(breaks = seq(0, 60, 10)) +
scale_y_continuous(breaks = seq(0, 30, 5)) +
scale_color_manual(values = c("red", "blue")) +
facet_wrap(~sector) +
labs(
title = "薪资与工作年限的关系", subtitle = "mosaicData::CPS85数据集",
x = "工作年限", y = "薪资"
) +
theme_bw()
# 设置标签
ggplot(
data = dataset,
mapping = aes(x = exper, y = wage, color = sex, shape = sex, linetype = sex)
) +
geom_point(alpha = 0.7, size = 1.5) +
geom_smooth(method = "lm", se = FALSE, size = 1.5) +
scale_x_continuous(breaks = seq(0, 60, 10)) +
scale_y_continuous(breaks = seq(0, 30, 5), labels= scales::dollar) +
scale_color_manual(values = c("indianred3", "cornflowerblue")) +
theme_bw()
# 刻面图：为给定的某个变量（组合）的每一个水平分别绘制一张图
ggplot(
data = dataset,
mapping = aes(x = exper, y = wage, color = sex, shape = sex, linetype = sex)
) +
geom_point(alpha = 0.7, size = 1.5) +
geom_smooth(method = "lm", se = FALSE, size = 1.5) +
scale_x_continuous(breaks = seq(0, 60, 10)) +
scale_y_continuous(breaks = seq(0, 30, 5)) +
scale_color_manual(values = c("indianred3", "cornflowerblue")) +
facet_wrap(~sector) +
theme_bw()
ggplot(
data = dataset,
mapping = aes(x = exper, y = wage, color = sex, shape = sex, linetype = sex)
) +
geom_point(alpha = 0.7, size = 1.5) +
geom_smooth(method = "lm", se = FALSE, size = 1.5) +
scale_x_continuous(breaks = seq(0, 60, 10)) +
scale_y_continuous(breaks = seq(0, 30, 5), labels= scales::dollar) +
scale_color_manual(values = c("indianred3", "cornflowerblue")) +
facet_wrap(~sector) +
theme_bw()
# 刻面图：为给定的某个变量（组合）的每一个水平分别绘制一张图
ggplot(
data = dataset,
mapping = aes(x = exper, y = wage, color = sex, shape = sex, linetype = sex)
) +
geom_point(alpha = 0.7, size = 1.5) +
geom_smooth(method = "lm", se = FALSE, size = 1.5) +
scale_x_continuous(breaks = seq(0, 60, 10)) +
scale_y_continuous(breaks = seq(0, 30, 5), labels= scales::dollar) +
scale_color_manual(values = c("indianred3", "cornflowerblue")) +
facet_wrap(~sector) +
theme_bw()
# 设置标签（标题、副标题、说明文字）
ggplot(
data = dataset,
mapping = aes(x = exper, y = wage, color = sex, shape = sex, linetype = sex)
) +
geom_point(alpha = 0.7, size = 1.5) +
geom_smooth(method = "lm", se = FALSE, size = 1.5) +
scale_x_continuous(breaks = seq(0, 60, 10)) +
scale_y_continuous(breaks = seq(0, 30, 5), labels= scales::dollar) +
scale_color_manual(values = c("indianred3", "cornflowerblue")) +
facet_wrap(~sector) +
labs(
title = "薪资与工作年限的关系", subtitle = "mosaicData::CPS85数据集",
x = "工作年限", y = "薪资"
) +
theme_bw()
dataset <- mosaicData::CPS85
# ggplot需要输入一个数据框和一组映射，映射是数据框变量到图形的可视属性的映射
ggplot(data = dataset, mapping = aes(x = exper, y = wage))
# geom_xxx函数在图形上放置几何对象，geom_xxx函数家族非常丰富
ggplot(data = dataset, mapping = aes(x = exper, y = wage)) +
geom_point()
# ggplot需要输入一个数据框和一组映射，映射是数据框变量到图形的可视属性的映射
ggplot(data = dataset, mapping = aes(x = exper, y = wage))
# geom_xxx函数在图形上放置几何对象，geom_xxx函数家族非常丰富
ggplot(data = dataset, mapping = aes(x = exper, y = wage)) +
geom_point()
# 去除异常点并添加颜色
dataset <- dataset[dataset$wage < 40, ]
ggplot(data = dataset, mapping = aes(x = exper, y = wage)) +
geom_point(color = "cornflowerblue", alpha = 0.7, size = 1.5) +
theme_bw()
# geom_smooth函数在图形上添加平滑曲线，以此来展示数据的趋势
ggplot(data = dataset, mapping = aes(x = exper, y = wage)) +
geom_point(color = "cornflowerblue", alpha = 0.7, size = 1.5) +
geom_smooth(method = "lm") +
theme_bw()
# 将变量映射到点的颜色、形状和线的颜色（这可以让多组观测值在单个图形中叠加，被称为分组），注意这时geom_point就不要设置color参数了
ggplot(
data = dataset,
mapping = aes(
x = exper, y = wage, color = sex, shape = sex, linetype = sex)) +
geom_point(alpha = 0.7, size = 1.5) +
geom_smooth(method = "lm", se = FALSE, size = 1.5) +
theme_bw()
# 修改标尺设置
ggplot(
data = dataset,
mapping = aes(x = exper, y = wage, color = sex, shape = sex, linetype = sex)
) +
geom_point(alpha = 0.7, size = 1.5) +
geom_smooth(method = "lm", se = FALSE, size = 1.5) +
scale_x_continuous(breaks = seq(0, 60, 10)) +
scale_y_continuous(breaks = seq(0, 30, 5)) +
scale_color_manual(values = c("indianred3", "cornflowerblue")) +
theme_bw()
# 修改标尺设置
ggplot(
data = dataset,
mapping = aes(x = exper, y = wage, color = sex, shape = sex, linetype = sex)
) +
geom_point(alpha = 0.7, size = 1.5) +
geom_smooth(method = "lm", se = FALSE, size = 1.5) +
scale_x_continuous(breaks = seq(0, 60, 10)) +
scale_y_continuous(breaks = seq(0, 30, 5)) +
scale_color_manual(values = c("indianred3", "cornflowerblue")) +
theme_bw()
styler:::style_active_file()
# 修改标尺设置
ggplot(
data = dataset,
mapping = aes(
x = exper, y = wage, color = sex, shape = sex,
linetype = sex
)
) +
geom_point(alpha = 0.7, size = 1.5) +
geom_smooth(method = "lm", se = FALSE, size = 1.5) +
scale_x_continuous(breaks = seq(0, 60, 10)) +
scale_y_continuous(breaks = seq(0, 30, 5)) +
scale_color_manual(values = c("indianred3", "cornflowerblue")) +
theme_bw()
# 设置标签（使用scales格式化标签）
ggplot(
data = dataset,
mapping = aes(x = exper, y = wage, color = sex, shape = sex, linetype = sex)
) +
geom_point(alpha = 0.7, size = 1.5) +
geom_smooth(method = "lm", se = FALSE, size = 1.5) +
scale_x_continuous(breaks = seq(0, 60, 10)) +
scale_y_continuous(breaks = seq(0, 30, 5), labels = scales::dollar) +
scale_color_manual(values = c("indianred3", "cornflowerblue")) +
theme_bw()
# 刻面图：为给定的某个变量（组合）的每一个水平分别绘制一张图
ggplot(
data = dataset,
mapping = aes(x = exper, y = wage, color = sex, shape = sex, linetype = sex)
) +
geom_point(alpha = 0.7, size = 1.5) +
geom_smooth(method = "lm", se = FALSE, size = 1.5) +
scale_x_continuous(breaks = seq(0, 60, 10)) +
scale_y_continuous(breaks = seq(0, 30, 5), labels = scales::dollar) +
scale_color_manual(values = c("indianred3", "cornflowerblue")) +
facet_wrap(~sector) +
theme_bw()
# 设置标签（标题、副标题、说明文字）
ggplot(
data = dataset,
mapping = aes(x = exper, y = wage, color = sex, shape = sex, linetype = sex)
) +
geom_point(alpha = 0.7, size = 1.5) +
geom_smooth(method = "lm", se = FALSE, size = 1.5) +
scale_x_continuous(breaks = seq(0, 60, 10)) +
scale_y_continuous(breaks = seq(0, 30, 5), labels = scales::dollar) +
scale_color_manual(values = c("indianred3", "cornflowerblue")) +
facet_wrap(~sector) +
labs(
title = "薪资与工作年限的关系", subtitle = "mosaicData::CPS85数据集",
x = "工作年限", y = "薪资"
) +
theme_bw()
# 设置主题，主题函数以theme_开头
ggplot(
data = dataset,
mapping = aes(x = exper, y = wage, color = sex, shape = sex, linetype = sex)
) +
geom_point(alpha = 0.7, size = 1.5) +
geom_smooth(method = "lm", se = FALSE, size = 1.5) +
scale_x_continuous(breaks = seq(0, 60, 10)) +
scale_y_continuous(breaks = seq(0, 30, 5), labels = scales::dollar) +
scale_color_manual(values = c("indianred3", "cornflowerblue")) +
facet_wrap(~sector) +
labs(
title = "薪资与工作年限的关系", subtitle = "mosaicData::CPS85数据集",
x = "工作年限", y = "薪资"
) +
theme_light()
styler:::style_active_file()
styler:::style_active_file()
ggplot(data = dataset, mapping = aes(x = exper, y = wage, color = sex)) +
geom_point(alpha = 0.7, size = 1.5) +
geom_smooth(method = "lm", se = FALSE, size = 1) +
scale_color_manual(values = c("indianred3", "cornflowerblue")) +
theme_bw()
dataset <- mosaicData::CPS85
# 去除异常点并添加颜色
dataset <- dataset[dataset$wage < 40, ]
ggplot(data = dataset, mapping = aes(x = exper, y = wage, color = sex)) +
geom_point(alpha = 0.7, size = 1.5) +
geom_smooth(method = "lm", se = FALSE, size = 1) +
scale_color_manual(values = c("indianred3", "cornflowerblue")) +
theme_bw()
ggplot(data = dataset, mapping = aes(x = exper, y = wage)) +
geom_point(alpha = 0.7, size = 1.5) +
geom_smooth(method = "lm", se = FALSE, size = 1) +
scale_color_manual(values = c("indianred3", "cornflowerblue")) +
theme_bw()
ggplot(data = dataset, mapping = aes(x = exper, y = wage)) +
geom_point(aes(color = sex), alpha = 0.7, size = 1.5) +
geom_smooth(method = "lm", se = FALSE, size = 1) +
scale_color_manual(values = c("indianred3", "cornflowerblue")) +
theme_bw()
data(CPS85, package = "mosaicData")
dataset <- CPS85[CPS85$wage < 40, ]
myplot <- ggplot(dataset, aes(x = exper, y = wage)) + geom_point()
myplot
styler:::style_active_file()
myplot2 <- myplot + geom_point(size = 3, color = "blue")
myplot2
myplot + geom_smooth(method = "lm") + labs(title = "Mildly interesting graph")
data(CPS85, package = "mosaicData")
dataset <- CPS85[CPS85$wage < 40, ]
styler:::style_active_file()
# 自己验证一个东西
myplot <- ggplot(dataset, aes(x = exper, y = wage)) +
geom_point(size = 3, color = "blue")
myplot2 <- myplot + geom_point(size = 1, color = "red")
# Rstudio立即画图
myplot
myplot2
# 保存文件
ggsave("ggplot2_layer_demo.png", plot = myplot2, width = 5, height = 4)
# 保存文件
ggsave("chapter4/ggplot2_layer_demo.png", plot = myplot2, width = 5, height = 4)
# 修改文件后缀即可保存为不同的格式，pdf、svg、wmf为矢量图（放大不会出现锯齿）
ggsave("chapter4/ggplot2_layer_demo.pdf", plot = myplot2, width = 5, height = 4)
ggsave("chapter4/ggplot2_layer_demo.wmf", width = 5, height = 4)
# 不指定plot则保存最近创建的一个图形
ggsave("chapter4/ggplot2_layer_demo.svg", width = 5, height = 4)
# 不指定plot则保存最近创建的一个图形
# 保存为svg依赖svglite这个包，需要安装一下
ggsave("chapter4/ggplot2_layer_demo.svg", width = 5, height = 4)
# 常见错误2：
ggplot(dataset, aes(x = exper, y = wage) +
geom_point(size = 3, color = "blue"))
# 常见错误2：
ggplot(dataset, aes(x = exper, y = wage)) +
geom_point(color = "blue")
# 常见错误2：
ggplot(dataset, aes(x = exper, y = wage, color = "blue")) +
geom_point()
# 正确写法
ggplot(dataset, aes(x = exper, y = wage)) +
geom_point(color = "blue")
# 常见错误2：
ggplot(dataset, aes(x = exper, y = wage, color = "blue")) +
geom_point()
aes(x = exper, y = wage)
aes_val <- aes(x = exper, y = wage)
View(aes_val)
dataset <- mosaicData::CPS85
# "wage"、"educ"、"race"、"sex"、"hispanic"、"south"、"married"、"exper"、"union"、"age"、"sector"
# 小时工资、受教育年限、种族、性别、西班牙裔、是否居住在美国南部、
# 婚姻状况、工作经验年限、是否属于工会、年龄、行业
names(dataset)
# 去除异常点并添加颜色
dataset <- dataset[dataset$wage < 40, ]
# 颜色全局作用
ggplot(data = dataset, mapping = aes(x = exper, y = wage, color = sex)) +
geom_point(alpha = 0.7, size = 1.5) +
geom_smooth(method = "lm", se = FALSE, size = 1) +
scale_color_manual(values = c("indianred3", "cornflowerblue")) +
theme_bw()
# 颜色只作用于某个元素
ggplot(data = dataset, mapping = aes(x = exper, y = wage)) +
geom_point(aes(color = sex), alpha = 0.7, size = 1.5) +
geom_smooth(method = "lm", se = FALSE, size = 1) +
scale_color_manual(values = c("indianred3", "cornflowerblue")) +
theme_bw()
data(CPS85, package = "mosaicData")
dataset <- CPS85[CPS85$wage < 40, ]
# 把图形作为对象使用，这个时候Rstudio没有立即画图
myplot <- ggplot(dataset, aes(x = exper, y = wage)) +
geom_point()
# Rstudio立即画图
myplot
myplot2 <- myplot + geom_point(size = 3, color = "blue")
myplot2
# 如果没有变量，Rstudio立即画图（和普通变量的行为是一样的）
myplot + geom_smooth(method = "lm") + labs(title = "Mildly interesting graph")
# 第一层，蓝色的点，size是3
myplot <- ggplot(dataset, aes(x = exper, y = wage)) +
geom_point(size = 3, color = "blue")
# 第二层，红色的点，size是1，可以发现第二层的点是覆盖到第一层上面的
myplot2 <- myplot + geom_point(size = 1, color = "red")
myplot2
aes_val <- aes(x = exper111, y = wage)
View(aes_val)
myplot + geom_point(size = 1, color = "red") + labs(title = "验证ggplot2工作原理确实是类似图层的概念")
# 保存文件
ggsave("chapter4/ggplot2_layer_demo.png", plot = myplot2, width = 5, height = 4)
ggsave("chapter4/ggplot2_layer_demo.png", width = 5, height = 4)
ggsave("chapter4/ggplot2_layer_demo.png", width = 5, height = 4)
